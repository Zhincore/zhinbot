datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// #### MAIN ####

model Guild {
  id String @id

  reactRoles SelfRolesItem[]
  effects    EffectItem[]
  alerts     AlertsItem[]
}

// #### MODULES ####

// ## Alerts ##
model AlertsItem {
  guild     Guild   @relation(references: [id], fields: [guildId], onDelete: Cascade)
  guildId   String
  type      String
  name      String
  channelId String
  roleId    String?

  @@id([guildId, type, name])
}

// ## Effects ##
model EffectItem {
  id        Int     @default(autoincrement())
  guild     Guild   @relation(references: [id], fields: [guildId], onDelete: Cascade)
  guildId   String
  order     Int     @default(0)
  pattern   String
  response  String
  transform String?

  @@id([id, guildId])
}

// ## Self-roles ##
model SelfRolesItem {
  id        Int    @id @default(autoincrement())
  guild     Guild  @relation(references: [id], fields: [guildId], onDelete: Cascade)
  guildId   String
  channelId String
  messageId String? @unique

  color       Int     @default(0)
  title       String  @default("Choose your role")
  description String?
  message     String?
  showHelp    Boolean @default(true)
  showId      Boolean @default(false)
  showRoles   Boolean @default(true)

  roles SelfRolesRole[]
}

model SelfRolesRole {
  emoji       String        @default("")
  roleId      String
  description String        @default("")
  item        SelfRolesItem @relation(references: [id], fields: [itemId], onDelete: Cascade)
  itemId      Int

  @@id([itemId, roleId])
}
