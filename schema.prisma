datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// #### MAIN ####

model Guild {
  id String @id

  // Player
  playerChannel String?

  // Services
  moderator ModeratorConfig @relation(fields: [id], references: [guildId], onDelete: Cascade)

  // Modules
  selfRoles SelfRolesItem[]
  // effects    EffectItem[]
  // alerts     AlertsItem[]
}

// #### SERVICES ####

model ModeratorConfig {
  guildId String @id
  guild   Guild?

  modUpdatesChannel String?

  categRoleId String?
  mutedRoleId String?

  mutes Mutes[]
}

model Mutes {
  guildId String
  userId  String
  end     DateTime
  mod     ModeratorConfig @relation(fields: [guildId], references: [guildId], onDelete: Cascade)

  @@id([guildId, userId])
}

// #### MODULES ####

// ## Alerts ##
// model AlertsItem {
//   guild     Guild   @relation(references: [id], fields: [guildId], onDelete: Cascade)
//   guildId   String
//   type      String
//   name      String
//   channelId String
//   roleId    String?
//
//   @@id([guildId, type, name])
// }

// ## Effects ##
// model EffectItem {
//   id        Int     @default(autoincrement())
//   guild     Guild   @relation(references: [id], fields: [guildId], onDelete: Cascade)
//   guildId   String
//   order     Int     @default(0)
//   pattern   String
//   response  String
//   transform String?
//
//   @@id([id, guildId])
// }

// ## Self-roles ##
model SelfRolesItem {
  id        Int     @id @default(autoincrement())
  guild     Guild   @relation(references: [id], fields: [guildId], onDelete: Cascade)
  guildId   String
  channelId String
  messageId String? @unique

  color       Int     @default(0)
  title       String  @default("Choose your role")
  description String?
  message     String?
  showHelp    Boolean @default(true)
  showId      Boolean @default(false)
  showRoles   Boolean @default(true)

  roles SelfRolesRole[]
}

model SelfRolesRole {
  emoji       String        @default("")
  roleId      String
  description String        @default("")
  item        SelfRolesItem @relation(references: [id], fields: [itemId], onDelete: Cascade)
  itemId      Int

  @@id([itemId, roleId])
}
